---
name: CI
on: [ workflow_dispatch, push, pull_request ]
jobs:
  omnilint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: docker://lpenz/omnilint:0.5
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: docker://lpenz/ghaction-cmake:0.21.1
        with:
          preset: coverage
      - uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
  tests:
    strategy:
        matrix:
          preset:
            - cppcheck
            - clang-tidy
            - install
            - clang-sanitize-address
            - clang-sanitize-memory
            - clang-sanitize-undefined
            - clang-sanitize-dataflow
            - clang-sanitize-safe-stack
            - valgrind
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: docker://lpenz/ghaction-cmake:0.21.1
        with:
          preset: ${{ matrix.preset }}
  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: DoozyX/clang-format-lint-action@v0.14
  cachix:
    needs: [ omnilint, clang-format, tests, coverage ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.11.0
      - uses: cachix/install-nix-action@v18
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          skipPush: ${{ steps.version.outputs.version_commit == '' }}
          name: lpenz
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-build
      - run: nix-shell --run "echo OK"
  publish-packagecloud:
    needs: [ omnilint, clang-format, tests, coverage ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant:
          - image: debian-bullseye-amd64
            distro: debian
            version: bullseye
          - image: debian-bookworm-amd64
            distro: debian
            version: bookworm
          - image: ubuntu-jammy-amd64
            distro: ubuntu
            version: jammy
          - image: raspbian-bullseye-armhf
            distro: raspbian
            version: bullseye
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      - uses: docker/setup-qemu-action@v2.1.0
      - uses: docker://lpenz/ghaction-cmake:0.21.1-debian-bullseye-amd64
        if: matrix.variant.image == 'debian-bullseye-amd64'
        with:
          preset: cpack
      - uses: docker://lpenz/ghaction-cmake:0.21.1-debian-bookworm-amd64
        if: matrix.variant.image == 'debian-bookworm-amd64'
        with:
          preset: cpack
      - uses: docker://lpenz/ghaction-cmake:0.21.1-ubuntu-jammy-amd64
        if: matrix.variant.image == 'ubuntu-jammy-amd64'
        with:
          preset: cpack
      - uses: docker://lpenz/ghaction-cmake:0.21.1-raspbian-bullseye-armhf
        if: matrix.variant.image == 'raspbian-bullseye-armhf'
        with:
          preset: cpack
      - run: |
          for f in *.deb; do ls -l "$f"; dpkg --info "$f"; done
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.11.0
      - uses: docker://lpenz/ghaction-packagecloud:0.4
        if: steps.version.outputs.version_commit != ''
        with:
          repository: ${{ matrix.variant.distro }}/${{ matrix.variant.distro }}/${{ matrix.variant.version }}
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
